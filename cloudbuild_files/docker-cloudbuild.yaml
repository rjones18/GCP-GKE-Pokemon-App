steps:
# Unit Test Pre-Step
- name: gcr.io/alert-flames-286515/pythonbaseimage:v3
  entrypoint: python3
  args:
  - ./dockerbuild_image_code/test_app.py

# Step 1: Build the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/gke-pokemon-app:$SHORT_SHA', './dockerbuild_image_code']


# Step 2: Push the Docker image to Google Container Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/gke-pokemon-app:$SHORT_SHA']

- id: 'Get Cluster Credentials'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args: ['-c', 'gcloud container clusters get-credentials my-gke-cluster --zone us-central1']

- id: 'Deploy GCR Image to Kubernetes Cluster'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args: ['-c', 'kubectl apply -f pokemon-app-deployment.yaml']

- id: 'Expose Deployment'
  name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args: ['-c', 'kubectl get svc pokedex-app || kubectl expose deployment pokedex-app --type=LoadBalancer --port 80 --target-port 8080']

# Set the images output for this build
images:
- 'gcr.io/$PROJECT_ID/gke-pokemon-app:$SHORT_SHA'




options:
  logging : CLOUD_LOGGING_ONLY
timeout: 1600s